/*
    TABLE OF CONTENTS:
        1. VARIABLES
        2. FUNCTIONS
        3. MIXINS
*/

/*
    1. VARIABLES
*/

$colors: (
  primary: #6200ee,
  primaryTint: #873df2,
  error: #b00020,
  grey: #757575,
  white: #ffffff,
  black: #000000,
);

// by default mobile first approach no breakpoint
$breakPoints: (
  tablet: 768px,
  laptop: 1024px,
  desktop: 1200px,
  largeDesktop: 1600px,
  extraLarge: 1900px,
);

$weights: (
  light: 300,
  regular: 400,
  medium: 500,
);

/*
    2. FUNCTIONS
*/

@function GetColor($colorName) {
  @return map-get($colors, $colorName);
}

@function ColorAlpha($color, $alpha) {
  @return rgba($color, $alpha);
}

@function GetWeight($weightName) {
  @return map-get($weights, $weightName);
}

/*
    3. MIXINS
*/

@mixin Media($deviceName) {
  @each $breakpoint, $sizePx in $breakpoints {
    @if $deviceName == $breakpoint {
      @media screen and(min-width: $sizePx) {
        @content;
      }
    }
  }
}

@mixin BoxShadow($dp) {
  @if $dp == 2 {
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, 0.14),
      0 3px 1px -2px rgba(0, 0, 0, 0.12), 0 1px 5px 0 rgba(0, 0, 0, 0.2);
  } @else if $dp == 4 {
    box-shadow: 0 4px 5px 0 rgba(0, 0, 0, 0.14),
      0 1px 10px 0 rgba(0, 0, 0, 0.12), 0 2px 4px -1px rgba(0, 0, 0, 0.2);
  } @else if $dp == 6 {
    box-shadow: 0 6px 10px 0 rgba(0, 0, 0, 0.14),
      0 1px 18px 0 rgba(0, 0, 0, 0.12), 0 3px 5px -1px rgba(0, 0, 0, 0.2);
  } @else {
    @error "Invalid argument for $dp: { $dp }, use only values[2, 4, 6]";
  }
}

@mixin Flex($wrap: nowrap, $direction: row, $align: start, $justify: start) {
  display: flex;
  flex-wrap: $wrap;
  flex-direction: $direction;
  align-items: $align;
  justify-content: $justify;
}
